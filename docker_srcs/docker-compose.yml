version: "3"
services:
    main_app:
        build: ./main_app
        image: main_app
        container_name: main_app
        restart: on-failure
        ports:
            - "8000:8000"
        volumes:
            - ../srcs/main_app/:/home/main_app
            # - main_app_data:/home/main_app
        depends_on:
            auth_app:
                condition: service_started
            postgres:
                condition: service_healthy
        env_file:
            - ./.env

    auth_app:
        build: ./auth_app
        image: auth_app
        container_name: auth_app
        restart: on-failure
        ports:
            - "5000:5000"
        volumes:
            - ../srcs/auth_app/:/home/auth_app
            # - auth_app_data:/home/auth_app
        depends_on:
            postgres:
                condition: service_healthy
        env_file:
            - ./.env

    postgres:
        build: ./postgres
        image: postgres
        container_name: postgres
        restart: on-failure
        volumes:
            - ../srcs/postgres/data:/var/lib/postgresql/data
            # - postgres_data:/var/lib/postgresql/data
        healthcheck:
            test: pg_isready -U postgres
            interval: 5s
            timeout: 5s
            retries: 5
        env_file:
            - ./.env

# volumes:
#     main_app_data:
#         driver: local
#         driver_opts:
#             o: bind
#             type: none
#             device: ../srcs/main_app/

#     auth_app_data:
#         driver: local
#         driver_opts:
#             o: bind
#             type: none
#             device: ../srcs/auth_app/

#     postgres_data:
#         driver: local
#         driver_opts:
#             o: bind
#             type: none
#             device: ../srcs/postgres/data
