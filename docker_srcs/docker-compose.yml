version: "3"
services:
    main_app:
        build: ./main_app
        image: main_app
        container_name: main_app
        restart: on-failure
        ports:
            - "8000:8000"
        volumes:
            - ../srcs/main_app/:/home/main_app
            # - main_app_data:/home/main_app
        depends_on:
            user_app:
                condition: service_started
            postgres:
                condition: service_healthy
        env_file:
            - ./.env

    user_app:
        build: ./user_app
        image: user_app
        container_name: user_app
        restart: on-failure
        ports:
            - "3000:3000"
        volumes:
            - ../srcs/user_app/:/home/user_app
        depends_on:
            postgres:
                condition: service_healthy
        env_file:
            - ./.env
        networks:
            - user_app_network

    postgres:
        build: ./postgres
        image: postgres
        container_name: postgres
        restart: on-failure
        volumes:
            - ../srcs/postgres/data:/var/lib/postgresql/data
            # - postgres_data:/var/lib/postgresql/data
        healthcheck:
            test: pg_isready -U postgres
            interval: 5s
            timeout: 5s
            retries: 5
        env_file:
            - ./.env
        networks:
            - user_app_network

# volumes:
#     main_app_data:
#         driver: local
#         driver_opts:
#             o: bind
#             type: none
#             device: ../srcs/main_app/

#     user_app_data:
#         driver: local
#         driver_opts:
#             o: bind
#             type: none
#             device: ../srcs/user_app/

    # postgres_data:
    #     driver: local
    #     driver_opts:
    #         o: bind
    #         type: none
    #         device: ../srcs/postgres/data

networks:
    user_app_network:
        driver: bridge
