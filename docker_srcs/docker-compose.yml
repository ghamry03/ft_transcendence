version: "3"
services:
    mainapp:
        build: ./main_app
        image: mainapp
        container_name: mainapp
        restart: on-failure
        ports:
            - "8000:8000"
        networks:
            - user_app_network
        volumes:
            - ../srcs/main_app/:/home/main_app
            # - main_app_data:/home/main_app
        depends_on:
            userapp:
                condition: service_started
            gameapp:
                condition: service_started
            postgres:
                condition: service_healthy
        env_file:
            - ./.env

    gameapp:
        build: ./game_app
        image: gameapp
        container_name: gameapp
        restart: on-failure
        ports:
            - "2000:2000"
        volumes:
            - ../srcs/game_app/:/home/game_app
            # - game_app_data:/home/game_app
        depends_on:
            userapp:
                condition: service_healthy
        env_file:
            - ./.env
        networks:
            - user_app_network
            
    userapp:
        build: ./user_app
        image: userapp
        container_name: userapp
        restart: on-failure
        ports:
            - "3000:3000"
        volumes:
            - ../srcs/user_app/:/home/user_app
        depends_on:
            postgres:
                condition: service_healthy
        env_file:
            - ./.env
        networks:
            - user_app_network
        healthcheck:
            test: ["CMD", "curl", "--fail", "http://localhost:3000/users/health"]
            interval: 5s
            timeout: 5s
            retries: 5

    postgres:
        build: ./postgres
        image: postgres
        container_name: postgres
        restart: on-failure
        volumes:
            - ../srcs/postgres/data:/var/lib/postgresql/data
            # - postgres_data:/var/lib/postgresql/data
        healthcheck:
            test: pg_isready -U postgres
            interval: 5s
            timeout: 5s
            retries: 5
        env_file:
            - ./.env
        networks:
            - user_app_network

    friendsapp:
        build: ./friends_app
        restart: always
        ports:
            - "8002:8000"
        volumes:
            - ../srcs/friends_app/:/home/friends_app
            - ../srcs/user_app/:/home/user_app
        depends_on:
            postgres:
                condition: service_healthy
            userapp:
                condition: service_healthy
        env_file:
            - ./.env
        networks:
            - user_app_network

# volumes:
#     user_app_data:
#         driver: local
#         driver_opts:
#             o: bind
#             type: none
#             device: ../srcs/user_app/

    # friends_app_data:
    #     driver: local
    #     driver_opts:
    #         o: bind
    #         type: none
    #         device: ../srcs/friends_app/

    # postgres_data:
    #     driver: local
    #     driver_opts:
    #         o: bind
    #         type: none
    #         device: ../srcs/postgres/data

networks:
    user_app_network:
        driver: bridge