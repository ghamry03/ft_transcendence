version: "3"
services:
    server:
        build: ./server
        restart: on-failure
        ports:
            - "80:80"
        depends_on:
            - main_app
            - postgres

    main_app:
        build: ./main_app
        restart: on-failure
        ports:
            - "8000:8000"
        # command:
        # - sh
        # - -c
        # - |
        #   python manage.py makemigrations
        #   python manage.py migrate --noinput
        #   python manage.py runserver 0.0.0.0:8000
        volumes:
            - main_app_data:/home/main_app
        depends_on:
            auth_app:
                condition: service_started
            postgres:
                condition: service_healthy
        env_file:
            - ./.env

    auth_app:
        build: ./auth_app
        restart: on-failure
        ports:
            - "5000:5000"
        volumes:
            - auth_app_data:/home/auth_app
        depends_on:
            postgres:
                condition: service_healthy
        env_file:
            - ./.env

    postgres:
        build: ./postgres
        restart: on-failure
        volumes:
            - postgres_data:/var/lib/postgresql/data
        healthcheck:
            test: pg_isready -U postgres
            interval: 5s
            timeout: 5s
            retries: 5
        env_file:
            - ./.env

volumes:
    main_app_data:
        driver: local
        driver_opts:
            o: bind
            type: none
            device: ../srcs/main_app/

    auth_app_data:
        driver: local
        driver_opts:
            o: bind
            type: none
            device: ../srcs/auth_app/

    postgres_data:
        driver: local
        driver_opts:
            o: bind
            type: none
            device: ../srcs/postgres/data
